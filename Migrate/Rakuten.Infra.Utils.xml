<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rakuten.Infra.Utils</name>
    </assembly>
    <members>
        <member name="T:Rakuten.Infra.Utils.SlackMessager`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rakuten.Infra.Utils.SlackMessager`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.SlackMessager`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="appName"></param>
        </member>
        <member name="M:Rakuten.Infra.Utils.SlackMessager`1.SetCurrentCorrelationID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.SlackMessager`1.GenerateCorrelationID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.SlackMessager`1.SendInfo(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SlackMessager`1.SendError(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.WrapperApiController">
            <summary>
            Defines properties and methods to result for Wrapper API controller.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.WrapperApiController.Ok``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.WrapperApiController.Ok">
            <summary>
            Creates an System.Web.Http.Results.OkResult (200 OK).
            </summary>
            <returns>An System.Web.Http.Results.OkResult.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.WrapperApiController.InternalServerError(System.Exception)">
            <summary>
            Creates an System.Web.Http.Results.ExceptionResult (500 Internal Server Error) with the specified exception.
            </summary>
            <param name="ex">The exception to include in the error.</param>
            <returns>An System.Web.Http.Results.ExceptionResult with the specified exception.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.WrapperApiController.BadRequest(System.ArgumentException)">
            <summary>
            Creates a System.Web.Http.Results.BadRequestResult.
            </summary>
            <param name="arg">An ArgumentException with the specified exception.</param>
            <returns>A System.Web.Http.Results.BadRequestResult.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.WrapperApiController.Forbidden">
            <summary>
            Creates a System.Web.Http.Results.ForbiddenResult.
            </summary>
            <returns>A System.Web.Http.Results.ForbiddenResult.</returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.APIResult">
            <summary>
            Result base API
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.APIResult.#ctor">
            <summary>
            Constructor APIResult 
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.APIResult.GetContent">
            <summary>
            Initializes a new instance of the System.IO.StreamWriter class for the specified stream by using UTF-8 encoding and the default buffer size.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rakuten.Infra.Utils.APIResult.status">
            <summary>
            Status result OK or ERROR
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.APIResult.messages">
            <summary>
            List of message 
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.APIResult`1">
            <summary>
            Result base API typed
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.APIResult`1.#ctor(`0)">
            <summary>
            Constructor APIResult typed
            </summary>
            <param name="content"></param>
        </member>
        <member name="P:Rakuten.Infra.Utils.APIResult`1.content">
            <summary>
            Cotent to response in json
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.IgnoreContractResolver`1">
            <summary>
            
            </summary>
            <typeparam name="TIgnoreAttribute"></typeparam>
        </member>
        <member name="T:Rakuten.Infra.Utils.ProxyContractResolver">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.ProxyContractResolver.IsProxy(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ProxyContractResolver.CreateContract(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.IgnoreContractResolver`1.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.DiscriminatorConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.DiscriminatorConverter.CanConvert(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DiscriminatorConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DiscriminatorConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="P:Rakuten.Infra.Utils.DiscriminatorConverter.CanWrite">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.JsonDiscriminatorAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.JsonClassAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.JsonClassAttribute.#ctor(System.Type[])">
            <summary>
            
            </summary>
            <param name="classTypes"></param>
        </member>
        <member name="P:Rakuten.Infra.Utils.JsonClassAttribute.ClassTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.JsonDbIgnore">
            <summary>
            Json ignore handler to remove json when save on database 
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.HandlerConverter`1">
            <summary>
            Instructs the Newtonsoft.Json.JsonSerializer to use the specified Newtonsoft.Json.JsonConverter when serializing the member or class.
            </summary>
            <typeparam name="T">Type of the object.</typeparam>
        </member>
        <member name="M:Rakuten.Infra.Utils.HandlerConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>true if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.HandlerConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The Newtonsoft.Json.JsonReader to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.HandlerConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The Newtonsoft.Json.JsonWriter to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Rakuten.Infra.Utils.PropertyContractResolver">
            <summary>
            Used by Newtonsoft.Json.JsonSerializer to resolves a Newtonsoft.Json.Serialization.JsonContract for a given System.Type.
            </summary>    
        </member>
        <member name="M:Rakuten.Infra.Utils.PropertyContractResolver.#ctor(System.Boolean,System.String[])">
            <summary>
            Used by Newtonsoft.Json.JsonSerializer to resolves a Newtonsoft.Json.Serialization.JsonContract for a given System.Type.
            </summary>
            <param name="allow"></param>
            /// <param name="propertyNames"></param>
        </member>
        <member name="M:Rakuten.Infra.Utils.PropertyContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            Creates a Newtonsoft.Json.Serialization.JsonProperty for the given System.Reflection.MemberInfo.
            </summary>
            <param name="member">The member to create a Newtonsoft.Json.Serialization.JsonProperty for.</param>
            <param name="memberSerialization">The member's parent Newtonsoft.Json.MemberSerialization.</param>
            <returns>A created Newtonsoft.Json.Serialization.JsonProperty for the given System.Reflection.MemberInfo.</returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.IgnorePropertyContractResolver">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.IgnorePropertyContractResolver.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="propertyNames"></param>
        </member>
        <member name="T:Rakuten.Infra.Utils.AllowPropertyContractResolver">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.AllowPropertyContractResolver.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="propertyNames"></param>
        </member>
        <member name="T:Rakuten.Infra.Utils.JsonDbObject">
            <summary>
            Json Db Object
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.JsonDbObject.Object">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.PropertiesConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.PropertiesConverter.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="propertiesString"></param>
            <param name="allow"></param>
        </member>
        <member name="M:Rakuten.Infra.Utils.PropertiesConverter.CanConvert(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.PropertiesConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.PropertiesConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="P:Rakuten.Infra.Utils.PropertiesConverter.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.IgnorePropertiesConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.IgnorePropertiesConverter.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="propertiesString"></param>
        </member>
        <member name="T:Rakuten.Infra.Utils.AllowPropertiesConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.AllowPropertiesConverter.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="propertiesString"></param>
        </member>
        <member name="T:Rakuten.Infra.Utils.RobotConfig">
            <summary>
            Provides access to configuration files for client applications. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotConfig.GetConfigurationValue(System.String)">
            <summary>
             Opens the configuration file for the current application as a System.Configuration.Configuration object.
            </summary>
            <param name="key">key to get value</param>
            <returns></returns>
        </member>
        <member name="P:Rakuten.Infra.Utils.RobotConfig.ServiceName">
            <summary>
            Gets the ServiceName from System.Configuration.AppSettingsSection data for the current application's default configuration. 
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.RobotConfig.DisplayName">
            <summary>
            Gets the DisplayName from System.Configuration.AppSettingsSection data for the current application's default configuration. 
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.RobotConfig.Description">
            <summary>
            Gets the Description from System.Configuration.AppSettingsSection data for the current application's default configuration. 
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.AsyncTaskExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.AsyncTaskExtensions.TransferCompletion``1(System.Threading.Tasks.TaskCompletionSource{``0},System.ComponentModel.AsyncCompletedEventArgs,System.Func{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tcs"></param>
            <param name="e"></param>
            <param name="getResult"></param>
        </member>
        <member name="T:Rakuten.Infra.Utils.BarcodeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.BarcodeExtensions.EncodeBarcode128(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.BarcodeExtensions.EncodeBarcode128Base64(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.DataMatrixExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.DataMatrixExtensions.EncodeDataMatrix(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="sizeIdx"></param>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DataMatrixExtensions.EncodeDataMatrixBase64(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="sizeIdx"></param>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.EnumExtension">
            <summary>
            Class enum extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.EnumExtension.ToEnum``1(System.String,System.Nullable{System.Boolean})">
            <summary>
            Transform the value string into Enum data type.
            </summary>
            <typeparam name="T">Enum data type</typeparam>
            <param name="value">The value in string to convert to type enum.</param>
            <param name="ignoreCase">To ignore case to convert enum.</param>
            <returns>The T value converted.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.EnumExtension.ToEnum``1(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Transform the value string into Enum data type.
            </summary>
            <typeparam name="T">Enum data type</typeparam>
            <param name="value">The value in string to convert to type enum.</param>
            <param name="ignoreCase">To ignore case to convert enum.</param>
            <returns>The T value converted.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.EnumExtension.ToValue``1(System.String)">
            <summary>
            Transform the value string into enum data type to Int.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value in string to convert to type enum.</param>
            <returns>The int value converted.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.EnumExtension.GetDescription(System.Enum)">
            <summary>
            Get description attribute from enum
            </summary>
            <param name="value"></param>
            <returns>The description attribute from enum</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.EnumExtension.ToLower(System.Enum)">
            <summary>
            Cast in string end put in lower case
            </summary>
            <param name="value"></param>
            <returns>The lowercase from Lowerenum</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.EnumExtension.GetValues``1">
            <summary>
            Gets a list of values for the enum type.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <returns>A list with all enum values</returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.ExceptionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.ExceptionExtensions.TrimMessage(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.HttpRequestMessageExtensions">
            <summary>
            Http Request Message Extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.HttpRequestMessageExtensions.GetClientIpAddress(System.Net.Http.HttpRequestMessage)">
            <summary>
            Get Client IpAddress
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.IOExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.IOExtensions.GetImageBase64(System.String)">
            <summary>
            
            </summary>
            <param name="dirImage"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.LinqExtensions">
            <summary>
            Linq Extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.LinqExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Distinct By
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.LinqExtensions.RemoveItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.LinqExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0[])">
            <summary>
            
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="items"></param>
        </member>
        <member name="T:Rakuten.Infra.Utils.PDFExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.PDFExtensions.MergePdf(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Merge Pdf from URI
            </summary>
            <param name="fileNames"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.ClaimsAuthorizationAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.ClaimsAuthorizationAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="actionContext"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Rakuten.Infra.Utils.ClaimsAuthorizationAttribute.ClaimType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.ClaimsAuthorizationAttribute.ClaimValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.HashAuthorizationAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.HashAuthorizationAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="actionContext"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.HttpMessageLogger`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.HttpMessageLogger`1.#ctor(Microsoft.Owin.OwinMiddleware)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Rakuten.Infra.Utils.HttpMessageLogger`1.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.CorsExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.CorsExtensions.UseHttpMessageLogger``1(Owin.IAppBuilder)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.JwtAuthorizationAttribute">
            <summary>
            Provides details for authorization filter.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.JwtAuthorizationAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>
            Calls when a process requests authorization.
            </summary>
            <param name="actionContext">The action context, which encapsulates information for using System.Web.Http.Filters.AuthorizationFilterAttribute.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtAuthorizationAttribute.Roles">
            <summary>
            Roles
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtAuthorizationAttribute.AppProperties">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.JwtNewtonsoftMapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.JwtNewtonsoftMapper.Serialize(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.JwtNewtonsoftMapper.Parse``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.JwtToken">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.JwtToken.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.JwtToken.#ctor(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <param name="properties"></param>
        </member>
        <member name="M:Rakuten.Infra.Utils.JwtToken.IsExpired">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtToken.type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtToken.iss">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtToken.exp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtToken.rfs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtToken.name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtToken.role">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.JwtToken.clm">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.RobotBase">
            <summary>
            Provides a base class for a service that will exist as part of a service
            application. System.ServiceProcess.ServiceBase must be derived from when
            creating a new service class.
            </summary>
        </member>
        <member name="F:Rakuten.Infra.Utils.RobotBase.timer">
            <summary>
            Timer Generates recurring events in an application.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.OnStop">
            <summary>
            When implemented in a derived class, executes when a Stop command is 
            sent to the service by the Service Control Manager (SCM). 
            Specifies actions to take when a service stops running.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.OnContinue">
            <summary>
            When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue"/> 
            runs when a Continue command is sent to the service by the Service Control Manager (SCM). 
            Specifies actions to take when a service resumes normal functioning after being paused.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.OnPause">
            <summary>
            When implemented in a derived class, executes when a Pause command is 
            sent to the service by the Service Control Manager (SCM). 
            Specifies actions to take when a service pauses.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.InitTimer(System.Int32)">
            <summary>
            Inits the timer.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.CheckHourStart(System.Int32)">
            <summary>
            Checks the hour start.
            </summary>
            <param name="hourStart">The hour start.</param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.TimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            This method is called when the timer fires
            It’s elapsed event. It will write the time
            to the event log.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Timers.ElapsedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.RobotBase.StartDebug(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Rakuten.Infra.Utils.RobotBase.DisplayName">
            <summary>
            Indicates the friendly name that identifies the service to the user.
            </summary>
        </member>
        <member name="P:Rakuten.Infra.Utils.RobotBase.Description">
            <summary>
             Gets or sets the description for the service.
            </summary>
        </member>
        <member name="T:Rakuten.Infra.Utils.SerializeExtensions">
            <summary>
            Class serialize extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.Serialize(System.Object,System.Type)">
            <summary>
            Serialize object into XML
            </summary>
            <param name="obj">The object to be transformed</param>
            <param name="type">The type to be transformed</param>
            <returns>The string in XML</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.Serialize``1(System.Object)">
            <summary>
            Serialize object into XML specified
            </summary>
            <typeparam name="T">The type to be transformed</typeparam>
            <param name="obj">The object to be transformed</param>
            <returns>The string in XML</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.Deserialize``1(System.String)">
            <summary>
            Deserialize XML string into object specified
            </summary>
            <typeparam name="T">The type to be transformed</typeparam>
            <param name="xml">The string in XML</param>
            <returns>The object to be transformed</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.ToJsonString(System.Object,System.String,System.Boolean)">
            <summary>
            Transform object into json string.
            </summary>
            <param name="obj"></param>
            <param name="typeNameHandling">
            None = 0: Do not include the .NET type name when serializing types.
            Objects = 1: Include the .NET type name when serializing into a JSON object structure.
            Arrays = 2: Include the .NET type name when serializing into a JSON array structure.
            All = 3: Always include the .NET type name when serializing.
            Auto = 4: Include the .NET type name when the type of the object being serialized is not the same as its declared type.
            </param>
            <param name="ignoreNullValue">
            Include = 0: Include null values when serializing and deserializing objects.
            Ignore = 1: Ignore null values when serializing and deserializing objects.
            </param>
            <returns>The string in json</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.ToJsonString(System.Object,System.String,System.Boolean,System.String[])">
            <summary>
            Transform object into json string.
            </summary>
            <param name="obj"></param>
            <param name="typeNameHandling">
            None = 0: Do not include the .NET type name when serializing types.
            Objects = 1: Include the .NET type name when serializing into a JSON object structure.
            Arrays = 2: Include the .NET type name when serializing into a JSON array structure.
            All = 3: Always include the .NET type name when serializing.
            Auto = 4: Include the .NET type name when the type of the object being serialized is not the same as its declared type.
            </param>
            <param name="ignoreNullValue">
            Include = 0: Include null values when serializing and deserializing objects.
            Ignore = 1: Ignore null values when serializing and deserializing objects.
            </param>
            <param name="ignoreProperties">The ignore properties</param>
            <returns>The string in json</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.ToJsonString``1(System.Object,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="TIgnoreAttribute"></typeparam>
            <param name="obj"></param>
            <param name="typeNameHandling"></param>
            <param name="ignoreNullValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.JsonTo``1(System.String,System.String)">
            <summary>
            Transform json string into object .
            </summary>
            <typeparam name="T">The type to be transformed</typeparam>
            <param name="value">The value in json to be transform</param>
            <param name="typeNameHandling">The type name handling</param>
            <returns>The object transformed</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.JsonTo(System.String,System.Type,System.String)">
            <summary>
            Transform json string into object .
            </summary>        
            <param name="value">The value in json to be transform</param>
            <param name="type">The type of object to be transform</param>
            <param name="typeNameHandling">The type name handling</param>
            <returns>The object transformed</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.CloneTyped``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SerializeExtensions.Clone``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.SecurityExtensions">
            <summary>
            Class security extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.EncodeJWT(System.Object,System.String)">
            <summary>
            Encode value JWT
            </summary>
            <param name="value">The value to encode</param>
            <param name="secretKey">The specific secret key in HS256 to use on encode JWT</param>
            <returns>The value encoded</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.EncodeJWT(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Encode value JWT
            </summary>
            <param name="value">The value to encode</param>
            <param name="secretKey">The specific secret key in HS256 to use on encode JWT</param>
            <returns>The value encoded</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.DecodeJWT(System.String,System.String)">
            <summary>
            Decode value JWT
            </summary>
            <param name="value">The value to decode</param>
            <param name="secretKey">The specific secret key in HS256 to use on decode JWT</param>
            <returns>The value decoded</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.TryDecodeJWT``1(System.String,System.String)">
            <summary>
            Try to decode the Jose.JwsAlgorithm.HS256 encrypted string and cast to specified class.
            </summary>
            <typeparam name="T">Type of class</typeparam>
            <param name="value">Encrypted string</param>
            <param name="secretKey">Secret key</param>
            <returns>Desserialized object of the specified class type</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.EncodeRSA(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.EncodeRSA(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.DecodeRSA(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.EncryptDES(System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="useHashing"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.SecurityExtensions.DecryptDES(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="useHashing"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.RSACrypto">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.RSACrypto.EncryptString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="inputString"></param>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.RSACrypto.DecryptString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="inputString"></param>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DESTriple.EncryptString(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="inputString"></param>
            <param name="useHashing"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DESTriple.DecryptString(System.String,System.Boolean)">
            <summary>
            /
            </summary>
            <param name="inputString"></param>
            <param name="useHashing"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.ObjectExtensions">
            <summary>
            Class object extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.IsNull(System.Object)">
            <summary>
            Check value objct is null.
            </summary>
            <param name="value">The object to be checked.</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.IsDBNull``1(System.Object)">
            <summary>
            Check value objct is Database null.
            </summary>
            <param name="value">The object to be checked.</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.IsDBNull``1(System.Object,``0)">
            <summary>
            Check value objct is Database null.
            </summary>
            <param name="value">The object to be checked.</param>
            <param name="defaultValue">Optional default value is default(int).</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsInt(System.Object,System.Int32)">
            <summary>
            Transform object into integer data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultInt">Optional default value is default(int).</param>
            <returns>The integer value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsLong(System.Object,System.Int64)">
            <summary>
            Transform object into integer data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultLong">Optional default value is default(int).</param>
            <returns>The integer value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsDouble(System.Object,System.Double)">
            <summary>
            Transform object into double data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultDouble">Optional default value is default(double).</param>
            <returns>The double value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsString(System.Object,System.String)">
            <summary>
            Transform object into string data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultString">Optional default value is default(string).</param>
            <returns>The string value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsDateTime(System.Object,System.DateTime)">
            <summary>
            Transform object into DateTime data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultDateTime">Optional default value is default(DateTime).</param>
            <returns>The DateTime value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsDecimal(System.Object,System.Decimal)">
            <summary>
            Transform object into decimal data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultDecimal">Optional default value is default(decimal).</param>
            <returns>The decimal value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsDecimal(System.Object,System.Globalization.CultureInfo,System.Decimal)">
            <summary>
            Transform object into decimal data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="culture">Optional culture. Default is en-US.</param>
            <param name="defaultDecimal">Optional default value is default(decimal).</param>
            <returns>The decimal value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsBool(System.Object,System.Boolean)">
            <summary>
            Transform object into bool data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultBool">Optional default value is default(bool).</param>
            <returns>The bool value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsGuid(System.Object)">
            <summary>
            Transform object into Guid data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <returns>The Guid value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsByteArray(System.String)">
            <summary>
            Transform string into byte array.
            </summary>
            <param name="value">The object to be transformed.</param>
            <returns>The transformed byte array.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsBase64String(System.Object,System.Boolean)">
            <summary>
            Transform object into base64 string.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="getEncodingByes">Get Bytes from String using Enconding.</param>
            <returns>The base64 string value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsByte(System.IO.Stream)">
            <summary>
            Transform Stream into byte array.
            </summary>
            <param name="inputStream">The object to be transformed.</param>
            <returns>The transformed byte array.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.AsBase64String(System.Object)">
            <summary>
            Transform object into base64 string.
            </summary>
            <param name="item">The object to be transformed.</param>
            <returns>The base64 string value.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.ForEach``1(System.Collections.Generic.IList{``0},System.Action{``0})">
            <summary>
            For Each in IList, Array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="action"></param>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            For Each in IEnumerable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="action"></param>
        </member>
        <member name="M:Rakuten.Infra.Utils.ObjectExtensions.IsSuccessStatusCode(Microsoft.Owin.IOwinResponse)">
            <summary>
            
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.NumberExtensions">
            <summary>
            Class number extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.IsZero(System.Int32)">
            <summary>
            Check int value is zero.
            </summary>
            <param name="value">The int value to be checked.</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.IsZero(System.Decimal)">
            <summary>
            Check decimal value is zero.
            </summary>
            <param name="value">The decimal value to be checked.</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.IsZero(System.Single)">
            <summary>
            Check float value is zero.
            </summary>
            <param name="value">The float value to be checked.</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.IsZero(System.Int64)">
            <summary>
            Check long value is zero.
            </summary>
            <param name="value">The long value to be checked.</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.ToInteger(System.Decimal)">
            <summary>
            Transform value into integer value Convert.ToInt32((value * 100)).
            </summary>
            <param name="value">The value to transform</param>
            <returns>The value to transformed</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.ToPercent(System.Decimal)">
            <summary>
            Transform value into percent value (value / 100).
            </summary>
            <param name="value">The value to transform</param>
            <returns>The value to transformed</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.ToCurrency(System.Decimal,System.String,System.String)">
            <summary>
            Format item in a string to currency specified.
            </summary>
            <param name="value">The value to format</param>
            <param name="cultureName">An string culture-specific formatting information. (pt-BR, en-US)</param>
            <param name="format">A composite format string</param>
            <returns>The value formated</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.ToCurrencyNoSign(System.Decimal)">
            <summary>
            Format item in a string to currency specified no sign.
            </summary>
            <param name="value">The value to format</param>        
            <returns>The value formated</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.NumberExtensions.ToUSCurrency(System.Decimal)">
            <summary>
            Format item in a string to american currency specified.
            </summary>
            <param name="value">The value to format</param>        
            <returns>The value formated</returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.GuidExtensions">
            <summary>
            Class guid extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.GuidExtensions.IsEmpty(System.Guid)">
            <summary>
            Check guid is empty == 00000000-0000-0000-0000-000000000000
            </summary>
            <param name="guid">The value guid</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.GuidExtensions.IsEmpty(System.Nullable{System.Guid})">
            <summary>
            Check guid is empty nullable == 00000000-0000-0000-0000-000000000000
            </summary>
            <param name="guid">The value guid nullable</param>
            <returns>The boolean true or false.</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.GuidExtensions.ToDBNull(System.Guid)">
            <summary>
            Transform the guid empty into DBNull data type.
            </summary>
            <param name="guid"></param>
            <returns>The guid nullable or empty</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.GuidExtensions.TakeHyphenOff(System.Guid)">
            <summary>
            Take hyphen off from guid value
            </summary>
            <param name="value">The guid value</param>
            <returns>The value cleared</returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.DateTimeExtensions">
            <summary>
            Class datetime extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.DateTimeExtensions.ToInverseSimpleDate(System.DateTime)">
            <summary>
            Transform the datetime in string on format dd/MM/yyyy
            </summary>
            <param name="date">The datetime</param>
            <returns>The datetime formated</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DateTimeExtensions.ToSimpleDate(System.DateTime)">
            <summary>
            Transform the datetime in string on format dd/MM/yyyy
            </summary>
            <param name="date">The datetime</param>
            <returns>The datetime formated</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DateTimeExtensions.ToSingleDateTime(System.DateTime)">
            <summary>
            Transform the datetime in string on format dd/MM/yyyy HH:mm
            </summary>
            <param name="date">The datetime</param>
            <returns>The datetime formated</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DateTimeExtensions.ToFullDateTime(System.DateTime)">
            <summary>
            Transform the datetime in string on format dd/MM/yyyy HH:mm:ss
            </summary>
            <param name="date">The datetime</param>
            <returns>The datetime formated</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DateTimeExtensions.ToInverseFullDateTime(System.DateTime,System.Boolean)">
            <summary>
            Transform the datetime in string on format yyyy-MM-dd{T}HH:mm:ss T is optional
            </summary>
            <param name="date">The datetime</param>
            <param name="includeT">The optional to include T on time</param>
            <returns>The datetime formated</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DateTimeExtensions.ToInverseFullDateTime(System.DateTime)">
            <summary>
            Transform the datetime in string on format yyyyMMddhhmmss
            </summary>
            <param name="date">The datetime</param>
            <returns>The datetime formated</returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.DateTimeExtensions.ToInverseSingleDateTime(System.DateTime)">
            <summary>
            Transform the datetime in string on format yyyyMMdd
            </summary>
            <param name="date">The datetime</param>
            <returns>The datetime formated</returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.ServiceInstallerBase">
            <summary>
            Service Installer Base
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.ServiceInstallerBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Rakuten.Infra.Utils.ServiceInstallerBase.InitializeComponent(System.String,System.String,System.String)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.ServiceInstallerBase.Install(System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="stateSaver"></param>
        </member>
        <member name="T:Rakuten.Infra.Utils.StringExtensions">
            <summary>
            Class string extensions
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsValidCPF(System.String)">
            <summary>
            Check CPF is valid
            </summary>
            <param name="CPF"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsValidCNPJ(System.String)">
            <summary>
            Check CNPJ is valid
            </summary>
            <param name="CNPJ"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsValidEmail(System.String)">
            <summary>
            Check e-mail is valid
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsNullorEmpty(System.String)">
            <summary>
            Check string is null or empty
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Check string is null or empty or white space
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsNumeric(System.String)">
            <summary>
            Check is numeric
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsJSONRequest(System.String)">
            <summary>
            Check is json request
            </summary>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsURL(System.String,System.String)">
            <summary>
            Check string is json request
            </summary>
            <param name="url"></param>
            <param name="uriScheme"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IsUnicode(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.HasUnicodeChar(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.ClearStrings(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.TakeAccentsOff(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.TakeHyphenOff(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.TakeQuotationMarksOff(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.TakeUnderlineOff(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.TakeSpecialCharactersOff(System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="keepWhiteSpaces"></param>
            <param name="keepBar"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.TakeHTMLOff(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.TakeWhiteSpacesOff(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.EncodeURIComponent(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.URLEncode(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.URLDecode(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.UppercaseFirst(System.String)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.InputHTTPonURL(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="URL"></param>
            <param name="inputWWW"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.InputWWWonURL(System.String)">
            <summary>
            
            </summary>
            <param name="URL"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.RemoveHTTPonURL(System.String)">
            <summary>
            
            </summary>
            <param name="URL"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.RemoveWWWonURL(System.String)">
            <summary>
            
            </summary>
            <param name="URL"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.RemoveHyphen(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.RemoveHeaderXML(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.RemoveQueryStrings(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.MaskCreditCard4Digits(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.MaskCNPJ(System.String)">
            <summary>
            
            </summary>
            <param name="CNPJ"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.MaskCPF(System.String)">
            <summary>
            
            </summary>
            <param name="CPF"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.MaskCEP(System.String)">
            <summary>
            
            </summary>
            <param name="CEP"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.OnlyNumbers(System.String)">
            <summary>
            OnlyNumbers
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.OnlyAlphanumeric(System.String)">
            <summary>
            OnlyAlphanumeric
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.ToFormat(System.String,System.Object[])">
            <summary>
            Replaces the format item in a specified string with the string representation of a corresponding object in a specified array.
            </summary>
            <param name="value">A composite format string (see Remarks).</param>
            <param name="values">An object array that contains zero or more objects to format.</param>
            <returns>
            A copy of format in which the format items have been replaced by the string representation of the corresponding objects in args.
            </returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.IfNullOrWhiteSpace(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.TrimJson(System.String)">
            <summary>
            Clear json strings
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.ToNumber(System.String)">
            <summary>
            OnlyNumbers
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.Zip(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.Unzip(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.StringExtensions.Unzip(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.JwtTokenFormat">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.JwtTokenFormat.Protect(Microsoft.Owin.Security.AuthenticationTicket)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.JwtTokenFormat.Unprotect(System.String)">
            <summary>
            
            </summary>
            <param name="protectedText"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.MessageHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rakuten.Infra.Utils.MessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
            <param name="request">The HTTP request message to send to the server.</param>
            <param name="cancellationToken">A cancellation token to cancel operation.</param>
            <returns>Returns System.Threading.Tasks.Task of TResult. The task object representing the asynchronous operation.</returns>       
        </member>
        <member name="M:Rakuten.Infra.Utils.MessageHandler.IncommingMessageAsync(System.String,System.String,System.String,System.Byte[])">
            <summary>
            The Incomming Message Async
            </summary>
            <param name="correlationId"></param>
            <param name="requestInfo"></param>
            <param name="ipAddress"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.MessageHandler.OutgoingMessageAsync(System.String,System.String,System.Net.HttpStatusCode,System.Byte[])">
            <summary>
            The Outgoing Message Async
            </summary>
            <param name="correlationId"></param>        
            <param name="ipAddress"></param>
            <param name="statusCode"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.MessageHandler.GetResponseMessageAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)">
            <summary>
            The get response message async
            </summary>
            <param name="request"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Rakuten.Infra.Utils.MessageLoggingHandler`1">
            <summary>
            Message Logging Handler
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rakuten.Infra.Utils.MessageLoggingHandler`1.IncommingMessageAsync(System.String,System.String,System.String,System.Byte[])">
            <summary>
            The Incomming Message Async
            </summary>
            <param name="correlationId"></param>
            <param name="requestInfo"></param>
            <param name="ipAddress"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rakuten.Infra.Utils.MessageLoggingHandler`1.OutgoingMessageAsync(System.String,System.String,System.Net.HttpStatusCode,System.Byte[])">
            <summary>
            The Outgoing Message Async
            </summary>
            <param name="correlationId"></param>        
            <param name="ipAddress"></param>
            <param name="statusCode"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
    </members>
</doc>
